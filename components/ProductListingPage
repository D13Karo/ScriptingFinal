import React, { useState } from 'react';
import './ProductListingPage.css';
import summerTop from './assets/SummerTop.jpg'; 
import blueTopFlower from './assets/BlueTop.jpg';
import blackBlouse from './assets/BlackBlouse.jpg';
import greenSkirt from './assets/GreenSkirt.jpg';
import CureTShirt from './assets/TheCureTShirt.jpg';
import CureTShirtBlack from './assets/TheCureTShirtBlack.jpg';
import DarkBlueJeans from './assets/DarkDenimJeans.jpg';
import LightBlueBaggyJeans from './assets/LightBlueBaggyJeans.jpg';
import GirlBag from './assets/GirlBag.jpg';
import GirlCloth from './assets/GirlCloth.jpg';
import GirlShoes from './assets/GirlShoes.jpg';
import BoyBag from './assets/BoyBag.jpg';
import BoyCloth from './assets/BoyCloth.jpg';
import BoyShoes from './assets/BoyShoes.jpg';
import { CiShoppingCart } from "react-icons/ci";
// Green cart icon SVG

const CartIcon = () => (
  <span
    style={{
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      background: '#4caf50',
      borderRadius: '50%',
      width: '44px',
      height: '44px',
      minWidth: '44px',
      minHeight: '44px',
      maxWidth: '44px',
      maxHeight: '44px',
      boxShadow: '0 2px 8px rgba(76,175,80,0.15)',
    }}
  >
    <CiShoppingCart size={22} color="#fff" style={{display: 'block'}} />
  </span>
);

const ProductListingPage = () => {
  const [categories] = useState([
    {
      name: "WOMEN",
      products: [
        { id: 1, name: "Summer Top", price: 30.00, image: summerTop, inStock: true },
        { id: 2, name: "Blue Top With Flower", price: 45.00, image: blueTopFlower, inStock: false },
        { id: 3, name: "Black Blouse", price: 75.00, image: blackBlouse, inStock: true },
        { id: 4, name: "Green mini skirt", price: 55.00, image: greenSkirt, inStock: true }
      ]
    },
    {
      name: "MEN",
      products: [
        { id: 5, name: "The Cure T-Shirt", price: 45.00, image: CureTShirt, inStock: true },
        { id: 6, name: "The Cure T-Shirt Black", price: 50.00, image: CureTShirtBlack, inStock: true },
        { id: 7, name: "Dark Blue Jeans", price: 95.00, image: DarkBlueJeans, inStock: false },
        { id: 8, name: "Light Blue Baggy Jeans", price: 80.00, image: LightBlueBaggyJeans, inStock: true },
      ]
    },
    {
      name: "KIDS",
      products: [
        { id: 9, name: "Pink Bag", price: 50.00, image: GirlBag, inStock: true },
        { id: 10, name: "Hello Kitty Dress", price: 80.00, image: GirlCloth, inStock: true },
        { id: 11, name: "White Converse", price: 130.00, image: GirlShoes, inStock: false },
        { id: 12, name: "Red Bag", price: 50.00, image: BoyBag, inStock: true },
        { id: 13, name: "Set For Boys", price: 100.00, image: BoyCloth, inStock: true },
        { id: 14, name: "Addidas Samba black", price: 150.00, image: BoyShoes, inStock: true }        
      ]
    }
  ]);
  const [selectedCategory, setSelectedCategory] = useState(categories[0].name);
  const [hoveredProduct, setHoveredProduct] = useState(null);

  const handleAddToCart = (productId) => {
    console.log(`Added product ${productId} to cart`);
    // Add your cart logic here
  };

  const openProductDetail = (productId) => {
    console.log(`Opening product detail for ${productId}`);
    // Add navigation to product detail page here
  };

  const currentCategory = categories.find(e => e.name === selectedCategory);

  return (
    <div className="product-listing-container">
      {/* Category Selector */}
      <div className="category-selector">
        {categories.map(e => (
          <button
            key={e.name}
            className={`category-btn${selectedCategory === e.name ? ' active' : ''}`}
            onClick={() => setSelectedCategory(e.name)}
          >
            {e.name}
          </button>
        ))}
      </div>

      {/* Category Title */}
      <div className="category-header">
        <h1 className="category-title">{currentCategory.name}</h1>
      </div>

      {/* Products Grid */}
      <div className="products-grid">
        {currentCategory.products.map(product => (
          <div 
            key={product.id}
            className={`product-card${!product.inStock ? ' out-of-stock' : ''}`}
            onMouseEnter={() => setHoveredProduct(product.id)}
            onMouseLeave={() => setHoveredProduct(null)}
          >
            <div className="product-image" onClick={() => openProductDetail(product.id)}>
              <img src={product.image} alt={product.name} />
              {!product.inStock && (
                <div className="out-of-stock-overlay" style={{
                  position: 'absolute',
                  top: 0, left: 0, right: 0, bottom: 0,
                  background: 'rgba(255,255,255,0.7)',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  fontWeight: 'bold',
                  fontSize: 22,
                  color: '#8d8f9a',
                  zIndex: 2
                }}>
                  OUT OF STOCK
                </div>
              )}
              {hoveredProduct === product.id && product.inStock && (
                <div className="add-to-cart-overlay">
                  <button 
                    className="add-to-cart-btn"
                    onClick={(e) => {
                      e.stopPropagation();
                      handleAddToCart(product.id);
                    }}
                  >
                    <CartIcon />
                  </button>
                </div>
              )}
            </div>
            <div className="product-info" onClick={() => openProductDetail(product.id)}>
              <h3 className="product-name">{product.name}</h3>
              <p className="product-price">${product.price.toFixed(2)}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default ProductListingPage;
